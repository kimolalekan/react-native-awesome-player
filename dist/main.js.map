{"mappings":"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","sources":["src/index.js","src/VideoPlayer.jsx","src/VideoControls.jsx","src/VideoHeader.jsx","src/VideoModal.jsx"],"sourcesContent":["import { VideoPlayer, action, playerStatus } from \"./VideoPlayer\";\nexport { VideoPlayer, action, playerStatus };\n","import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  ActivityIndicator,\n  Dimensions,\n} from \"react-native\";\nimport { Video } from \"expo-av\";\nconst dimension = Dimensions.get(\"screen\");\nimport Controls from \"./VideoControls\";\nimport Headers from \"./VideoHeader\";\nimport VideoModal from \"./VideoModal\";\n\nlet playerStatus = {};\nlet action = { play: undefined, pause: undefined };\n\nconst VideoPlayer = ({\n  title,\n  width,\n  height,\n  radius = 0,\n  backgroundColor = \"#000\",\n  progressColor = \"#3f3f3f\",\n  src,\n  poster,\n  resizeMode = \"contain\",\n  autoplay = false,\n  hideControls = false,\n  headers,\n  hideNavbar = false,\n  backHandler = null,\n  backIcon = \"chevron-back\",\n  showLibrary,\n  library = [],\n  libraryText = \"Episodes\",\n  autoplayLibrary = true,\n}) => {\n  const [sizes, setSizes] = useState(dimension);\n  const video = useRef(null);\n  const [_title, setTitle] = useState(title);\n  const [_src, setSrc] = useState(src);\n  const [_poster, setPoster] = useState(poster);\n  const [status, setStatus] = useState({});\n  const [duration, setDuration] = useState(0);\n  const [countdown, setCountdown] = useState(0);\n  const [timing, setTiming] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [controls, showControls] = useState(true);\n  const [modal, toggleModal] = useState(false);\n  const [orientation, setOrientation] = useState(\"portrait\");\n\n  playerStatus = status;\n  action = {\n    isPlaying: status?.isPlaying,\n    play: () => video?.current?.playAsync(),\n    pause: () => video?.current?.pauseAsync(),\n  };\n\n  const styles = StyleSheet.create({\n    container: {\n      width,\n      height,\n      borderRadius: radius,\n      backgroundColor,\n    },\n    video: {\n      width,\n      height,\n    },\n    text: {\n      position: \"relative\",\n      top: 13,\n      fontSize: 11,\n      color: \"white\",\n      textAlign: \"center\",\n    },\n    controls: {\n      position: \"absolute\",\n      top: 0,\n      bottom: 0,\n      width,\n      height,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      zIndex: 3000,\n    },\n    loader: {\n      position: \"absolute\",\n      top: 70,\n      bottom: 0,\n      width,\n      height: height - 130,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      zIndex: 1000,\n      display: loading ? \"flex\" : \"none\",\n    },\n  });\n\n  useEffect(() => {\n    const subscription = Dimensions.addEventListener(\n      \"change\",\n      ({ window, screen }) => {\n        setSizes(screen);\n        screen.width > 800\n          ? setOrientation(\"landscape\")\n          : setOrientation(\"portrait\");\n      }\n    );\n\n    return () => subscription?.remove();\n  }, [orientation]);\n\n  const toggleLibrary = () => {\n    showControls(false);\n    toggleModal(true);\n  };\n\n  const handleLibrary = (library) => {\n    setLoading(true);\n    setTitle(library?.title);\n    setPoster(library?.poster);\n    setSrc(library?.video);\n    showControls(true);\n    toggleModal(false);\n    video.current.setStatusAsync({ positionMillis: 0, shouldPlay: true });\n  };\n\n  const playNext = () => {\n    const total = library.length;\n    let currentVideo = library.map((item) => item.video);\n    let current = currentVideo.indexOf(src);\n    let next = current + 1;\n    const nextVideo = library[next];\n    if (next > 0 || next <= total) {\n      handleLibrary(nextVideo);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <VideoModal\n        modal={modal}\n        toggleModal={toggleModal}\n        active={_src}\n        library={library}\n        libraryText={libraryText}\n        handleLibrary={handleLibrary}\n      />\n\n      <TouchableOpacity\n        style={styles.controls}\n        onPress={() => {\n          showControls(true);\n          setTimeout(() => {\n            showControls(false);\n          }, 7000);\n        }}\n      >\n        {!hideNavbar && (\n          <Headers\n            show={controls}\n            title={_title}\n            backIcon={backIcon}\n            backHandler={backHandler}\n            fullscreen={height === sizes.height}\n            orientation={orientation}\n          />\n        )}\n        <View style={styles.loader}>\n          <ActivityIndicator animating={true} color=\"#fff\" size={\"large\"} />\n        </View>\n        {!hideControls && (\n          <Controls\n            show={controls}\n            video={video}\n            orientation={orientation}\n            isPlaying={status.isPlaying}\n            libraryText={libraryText}\n            showLibrary={showLibrary}\n            toggleLibrary={() => toggleLibrary()}\n            showControls={showControls}\n            timing={timing}\n            setTiming={setTiming}\n            duration={duration}\n            countdown={countdown}\n            setCountdown={setCountdown}\n            progressColor={progressColor}\n          />\n        )}\n      </TouchableOpacity>\n\n      <Video\n        ref={video}\n        style={styles.video}\n        posterSource={{ uri: _poster }}\n        shouldPlay={autoplay}\n        source={{\n          uri: _src,\n          headers,\n        }}\n        useNativeControls={false}\n        resizeMode={resizeMode}\n        onPlaybackStatusUpdate={(status) => {\n          status.isBuffering ? setLoading(true) : false;\n          status.isPlaying ? setLoading(false) : false;\n          setStatus(status);\n          setTiming(status.positionMillis);\n          const _duration = status.positionMillis;\n          setCountdown(_duration / 1000);\n          status.didJustFinish ? playNext() : false;\n        }}\n        onLoad={(v) => {\n          setDuration(v.durationMillis);\n          // setCountdown(Math.round(v.durationMillis / 1000));\n          setLoading(false);\n\n          autoplay && autoplayLibrary\n            ? video.current.setStatusAsync({\n                positionMillis: 0,\n                shouldPlay: true,\n              })\n            : false;\n          setTimeout(() => {\n            showControls(false);\n          }, 7000);\n        }}\n      />\n    </View>\n  );\n};\n\nexport { VideoPlayer, action, playerStatus };\n","import * as React from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Slider } from \"@miblanchard/react-native-slider\";\nimport { Column as Col, Row } from \"react-native-flexbox-grid\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\n\nexport default function Controls({\n  show = true,\n  video,\n  orientation,\n  isPlaying,\n  duration,\n  countdown,\n  setCountdown,\n  timing,\n  setTiming,\n  iconColor = \"#fff\",\n  progressColor = \"#3f3f3f\",\n  radius,\n  showControls,\n  showLibrary = false,\n  toggleLibrary,\n  libraryText = \"Episodes\",\n}) {\n  const styles = StyleSheet.create({\n    bg: {\n      backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n      height: 40,\n      margin: 10,\n      marginBottom: 20,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderRadius: radius,\n    },\n    text: {\n      position: \"relative\",\n      top: 13,\n      fontSize: 11,\n      color: \"white\",\n      textAlign: \"center\",\n    },\n    iconStyle: { position: \"relative\", top: 10 },\n    thumbStyle: { width: 10, height: 10 },\n    libraryIcon: {\n      position: \"relative\",\n      top: 10,\n      alignItems: \"flex-end\",\n    },\n  });\n  const playAction = () => {\n    const _countdown = countdown * 1000;\n    if (duration === _countdown) {\n      video.current.setPositionAsync(0);\n    }\n\n    isPlaying ? video.current.pauseAsync() : video.current.playAsync();\n    setTimeout(() => {\n      showControls(false);\n    }, 5000);\n  };\n\n  const renderCountDown = (value) => {\n    let minutes = parseInt(value / 60, 10);\n    let seconds = parseInt(value % 60);\n    minutes = minutes <= 9 ? `0${minutes}` : minutes;\n    seconds = seconds <= 9 ? `0${seconds}` : seconds;\n    return `${minutes}:${seconds}`;\n  };\n\n  const librarySize = orientation === \"landscape\" ? 2 : 2;\n  const progressSize = orientation === \"landscape\" ? 7 : 5;\n  const progressLibrarySize = orientation === \"landscape\" ? 9 : 7;\n\n  return (\n    <View\n      style={[\n        styles.bg,\n        {\n          display: show === false ? \"none\" : \"flex\",\n        },\n      ]}\n    >\n      <Row>\n        <Col sm={1}>\n          <View style={styles.button}>\n            <TouchableOpacity style={styles.button} onPress={playAction}>\n              {isPlaying ? (\n                <Icon\n                  name=\"pause\"\n                  color={iconColor}\n                  size={20}\n                  style={styles.iconStyle}\n                />\n              ) : (\n                <Icon\n                  name=\"play\"\n                  color={iconColor}\n                  size={20}\n                  style={styles.iconStyle}\n                />\n              )}\n            </TouchableOpacity>\n          </View>\n        </Col>\n        <Col sm={orientation === \"landscape\" ? 1 : 2}>\n          <Text style={styles.text}>\n            {renderCountDown(countdown ? countdown : 0)}\n          </Text>\n        </Col>\n        <Col sm={showLibrary ? progressSize : progressLibrarySize}>\n          <Slider\n            value={timing}\n            maximumValue={Number(duration)}\n            thumbStyle={{ width: 15, height: 15 }}\n            thumbTintColor={progressColor}\n            minimumTrackTintColor={progressColor}\n            trackClickable\n            onValueChange={(value) => {\n              video.current.setStatusAsync({\n                positionMillis: Number(value[0]),\n              });\n              setTiming(Number(value[0]));\n              const _duration = Number(value[0]);\n              setCountdown(Math.ceil(_duration / 1000));\n            }}\n          />\n        </Col>\n        <Col sm={orientation === \"landscape\" ? 1 : 2}>\n          <Text style={styles.text}>{renderCountDown(duration / 1000)}</Text>\n        </Col>\n        <Col\n          smHidden={showLibrary === false}\n          sm={showLibrary ? librarySize : 0}\n        >\n          <TouchableOpacity\n            onPress={() => {\n              video.current.pauseAsync();\n              toggleLibrary();\n            }}\n          >\n            {orientation === \"landscape\" ? (\n              <Text style={styles.text}>\n                {showLibrary && libraryText ? libraryText : \"\"}\n              </Text>\n            ) : (\n              <View\n                style={[\n                  styles.libraryIcon,\n                  { display: showLibrary ? \"flex\" : \"none\" },\n                ]}\n              >\n                <Icon name=\"apps\" color=\"#fff\" size={18} />\n              </View>\n            )}\n          </TouchableOpacity>\n        </Col>\n      </Row>\n    </View>\n  );\n}\n","import * as React from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity, Image } from \"react-native\";\nimport { Column as Col, Row } from \"react-native-flexbox-grid\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport * as ScreenOrientation from \"expo-screen-orientation\";\n\nconst Header = ({\n  show,\n  title,\n  backHandler,\n  backIcon,\n  fullscreen = false,\n  orientation,\n}) => {\n  async function changeScreenOrientation() {\n    const v = await ScreenOrientation.getOrientationAsync();\n\n    const lock =\n      v === 1\n        ? ScreenOrientation.OrientationLock.LANDSCAPE_LEFT\n        : ScreenOrientation.OrientationLock.PORTRAIT_UP;\n\n    await ScreenOrientation.lockAsync(lock);\n  }\n\n  const _full =\n    fullscreen && orientation === \"portrait\"\n      ? 40\n      : fullscreen && orientation === \"landscape\"\n      ? 10\n      : 10;\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      marginTop: _full,\n      display: show ? \"flex\" : \"none\",\n    },\n    title: {\n      marginTop: 5,\n      color: \"#fff\",\n      fontSize: 14,\n      fontWeight: \"600\",\n      textShadowColor: \"rgba(0, 0, 0, 0.75)\",\n      textShadowOffset: { width: -1, height: 1 },\n      textShadowRadius: 10,\n    },\n    icon: { width: 25, height: 25, resizeMode: \"contain\" },\n    orientation: { flex: 1, alignItems: \"flex-end\", paddingRight: 20 },\n  });\n\n  return (\n    <View style={styles.container}>\n      <Row>\n        <Col sm={2}>\n          <TouchableOpacity\n            onPress={() => (backHandler ? backHandler() : null)}\n          >\n            <Icon name={backIcon} size={30} color={\"#fff\"} />\n          </TouchableOpacity>\n        </Col>\n        <Col sm={8}>\n          <View style={{ alignItems: \"center\" }}>\n            <Text style={styles.title}>{title ? title : \"\"}</Text>\n          </View>\n        </Col>\n        <Col sm={2}>\n          <TouchableOpacity\n            style={styles.orientation}\n            onPress={() => changeScreenOrientation()}\n          >\n            {orientation === \"portrait\" ? (\n              <Icon name={\"phone-landscape-outline\"} size={30} color={\"#fff\"} />\n            ) : (\n              <Icon name={\"phone-portrait-outline\"} size={30} color={\"#fff\"} />\n            )}\n          </TouchableOpacity>\n        </Col>\n      </Row>\n    </View>\n  );\n};\n\nexport default Header;\n","import {\n  View,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n  ImageBackground,\n  StyleSheet,\n} from \"react-native\";\nimport { Column as Col, Row } from \"react-native-flexbox-grid\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport Modal from \"react-native-modal\";\n\nconst VideoModal = ({\n  modal,\n  toggleModal,\n  active,\n  library,\n  libraryText,\n  handleLibrary,\n}) => {\n  const renderDuration = (value) => {\n    const suffix = value < 1 ? \"secs\" : \"mins\";\n    const duration = value >= 1 ? Math.round(value) : Math.round(value * 100);\n    return `${duration} ${suffix}`;\n  };\n\n  return (\n    <Modal style={styles.modal} isVisible={modal}>\n      <View style={styles.container}>\n        <TouchableOpacity\n          style={styles.icon}\n          onPress={() => toggleModal(false)}\n        >\n          <Icon name=\"chevron-back\" color={\"#fff\"} size={30} />\n        </TouchableOpacity>\n        <Text style={styles.heading}>\n          {libraryText} ({library.length})\n        </Text>\n        <ScrollView style={{ flex: 1 }}>\n          {library?.length ? (\n            library?.map((item, key) => (\n              <TouchableOpacity\n                key={key}\n                style={{\n                  flex: 1,\n                  marginBottom: 20,\n                  backgroundColor:\n                    active === item.video\n                      ? \"rgba(0, 0, 0, 0.1)\"\n                      : \"transparent\",\n                  padding: active === item.video ? 10 : 0,\n                  borderRadius: active === item.video ? 10 : 0,\n                }}\n                onPress={() => {\n                  handleLibrary(item);\n                }}\n              >\n                <Row>\n                  <Col sm={3}>\n                    <ImageBackground\n                      imageStyle={{ borderRadius: 10 }}\n                      style={styles.image}\n                      src={item.poster}\n                    >\n                      <Icon name=\"play-circle\" size={30} color=\"#fff\" />\n                    </ImageBackground>\n                  </Col>\n                  <Col sm={9}>\n                    <Text style={styles.title}>{item.title}</Text>\n                    <Text style={styles.duration}>\n                      {renderDuration(item.duration)}\n                    </Text>\n                  </Col>\n                </Row>\n              </TouchableOpacity>\n            ))\n          ) : (\n            <Text\n              style={{\n                textTransform: \"capitalize\",\n                color: \"#ccc\",\n              }}\n            >\n              No library\n            </Text>\n          )}\n        </ScrollView>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modal: { margin: 0 },\n  container: {\n    flex: 1,\n    backgroundColor: \"#454739\",\n    padding: 15,\n  },\n  heading: {\n    fontSize: 35,\n    fontWeight: \"700\",\n    marginBottom: 20,\n    color: \"#fff\",\n  },\n  icon: { marginBottom: 20, marginTop: 30 },\n  image: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: 80,\n    resizeMode: \"contain\",\n  },\n  title: {\n    paddingLeft: 10,\n    fontSize: 18,\n    textTransform: \"capitalize\",\n    color: \"#ccc\",\n    marginBottom: 10,\n  },\n  duration: {\n    paddingLeft: 10,\n    color: \"#ccc\",\n  },\n});\n\nexport default VideoModal;\n"],"names":[],"version":3,"file":"main.js.map"}